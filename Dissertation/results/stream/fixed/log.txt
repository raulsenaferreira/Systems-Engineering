**************** BEGIN of SGD results ****************
One Class Diagonal Translation. 2 Dimensional data.: 1 batches of 240 instances
99.58 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
One Class Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
90.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
91.25 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
89.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.08 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Diagonal Translation. 2 Dimensional data: 1 batches of 240 instances
95.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
91.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
90.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.08 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
86.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
77.08 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
86.25 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
75.42 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
90.42
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Four Classes Rotating Separated. Bidimensional.: 1 batches of 2166 instances
C:\Users\raul\Anaconda3\lib\site-packages\sklearn\utils\validation.py:526: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
99.82 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.82 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.86 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.86 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.86 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.91 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.91 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
=======================================================================================================
Four Classes Rotating with Expansion V1. Bidimensional.: 1 batches of 1875 instances
10.99 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
15.73 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
9.81 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
23.73 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
19.09 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
27.04 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
37.92 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
27.2 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
31.09 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
37.92
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
=======================================================================================================
Four Classes Rotating with Expansion V2. Bidimensional.: 1 batches of 2745 instances
84.55 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
68.93 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.08 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
63.64 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
51.73 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.47 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
46.38 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.38 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.44 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.55
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
=======================================================================================================
Five Classes Vertical Translation. Bidimensional.: 1 batches of 360 instances
87.22 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
80.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
81.11 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.06 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
=======================================================================================================
One Class Surrounding another Class. Bidimensional.: 1 batches of 830 instances
91.08 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
91.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
90.24 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
92.65 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
92.65 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
91.69 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
92.29 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
87.35 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
92.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
92.65
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
=======================================================================================================
Four Classes Expanding and One Class Fixed. Bidimensional.: 1 batches of 2599 instances
55.71 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
60.33 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
57.29 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
49.94 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
58.91 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
67.22 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
61.1 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
52.14 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
57.52 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
67.22
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
=======================================================================================================
Two Bidimensional Unimodal Gaussian Classes.: 1 batches of 1500 instances
92.33 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
82.87 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
90.93 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
95.87 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
97.2 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
97.93 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
90.07 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
98.6 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.0 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.0
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
=======================================================================================================
Two Bidimensional Multimodal Gaussian Classes.: 1 batches of 3000 instances
81.4 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
83.77 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.63 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.63 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.03 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.2 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.17
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Bidimensional Classes as Four Gaussians.: 1 batches of 3000 instances
74.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
65.8 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
73.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
58.3 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
70.07 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Two Bidimensional Classes as Four Gaussians. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Two Bidimensional Classes as Four Gaussians. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.17
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Artificial Two 3-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
97.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.4 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.23 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.57 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.37 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.37 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.63 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.63
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two 5-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
97.47 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.37 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.1 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.37 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.3 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.47 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Rotating Gears (Two classes. Bidimensional).: 1 batches of 3000 instances
95.53 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.9 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.1 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.53 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.0 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.1 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.37 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.07 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.1 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.53
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Rotated checkerboard dataset. Rotating 2*PI.: 1 batches of 3000 instances
48.47 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.8 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
An error occured in  Rotated checkerboard dataset. Rotating 2*PI. {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.8
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Electricity data. 7 features. 2 classes.: 1 batches of 414 instances
71.98 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.71 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.46 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.46 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
68.12 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
=======================================================================================================
Keyboard patterns database. 10 features. 4 classes.: 1 batches of 24 instances
54.17 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
37.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
62.5 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
70.83 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
=======================================================================================================
NOAA dataset. Eight  features. Two classes.: 1 batches of 273 instances
78.75 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
72.53 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
68.13 {'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75
{'batches': 1, 'clfName': 'SGD', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
=======================================================================================================
******** END of SGD results ********
**************** BEGIN of NB results ****************
One Class Diagonal Translation. 2 Dimensional data.: 1 batches of 240 instances
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
One Class Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Diagonal Translation. 2 Dimensional data: 1 batches of 240 instances
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Four Classes Rotating Separated. Bidimensional.: 1 batches of 2166 instances
99.72 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
=======================================================================================================
Four Classes Rotating with Expansion V1. Bidimensional.: 1 batches of 1875 instances
14.35 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
15.95 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
15.84 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
14.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
15.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
14.93 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
14.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
13.65 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
14.03 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
15.95
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
=======================================================================================================
Four Classes Rotating with Expansion V2. Bidimensional.: 1 batches of 2745 instances
80.66 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.81 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.85 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.32 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.44 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.08 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.44 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.48 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.25 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.32
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
=======================================================================================================
Five Classes Vertical Translation. Bidimensional.: 1 batches of 360 instances
86.94 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
=======================================================================================================
One Class Surrounding another Class. Bidimensional.: 1 batches of 830 instances
92.53 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.71 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
=======================================================================================================
Four Classes Expanding and One Class Fixed. Bidimensional.: 1 batches of 2599 instances
95.58 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.65 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.65 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
=======================================================================================================
Two Bidimensional Unimodal Gaussian Classes.: 1 batches of 1500 instances
98.8 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
=======================================================================================================
Two Bidimensional Multimodal Gaussian Classes.: 1 batches of 3000 instances
99.03 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.37 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Bidimensional Classes as Four Gaussians.: 1 batches of 3000 instances
81.13 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.57 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.33 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.43 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.37 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.17 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.73 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.93 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.93
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Artificial Two 3-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two 5-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
99.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.7 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Rotating Gears (Two classes. Bidimensional).: 1 batches of 3000 instances
91.57 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.43 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.4 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.33 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.73 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.97 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.27 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.37 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.67 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.67
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Rotated checkerboard dataset. Rotating 2*PI.: 1 batches of 3000 instances
49.47 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.2 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.3 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.8 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.7 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.27 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.23 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.43 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.07 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.8
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Electricity data. 7 features. 2 classes.: 1 batches of 414 instances
71.5 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
=======================================================================================================
Keyboard patterns database. 10 features. 4 classes.: 1 batches of 24 instances
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
=======================================================================================================
NOAA dataset. Eight  features. Two classes.: 1 batches of 273 instances
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29 {'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
77.29
{'batches': 1, 'clfName': 'NB', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
=======================================================================================================
******** END of NB results ********
**************** BEGIN of RF results ****************
One Class Diagonal Translation. 2 Dimensional data.: 1 batches of 240 instances
97.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
One Class Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
93.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
92.92 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Diagonal Translation. 2 Dimensional data: 1 batches of 240 instances
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
84.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Four Classes Rotating Separated. Bidimensional.: 1 batches of 2166 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.08 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.12 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.72 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.98 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.26 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.26 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.03 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.22 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.4 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.72
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
=======================================================================================================
Four Classes Rotating with Expansion V1. Bidimensional.: 1 batches of 1875 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
75.25 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
61.23 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
40.75 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
45.01 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
42.61 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
45.44 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
43.89 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
45.92 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
44.96 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
75.25
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
=======================================================================================================
Four Classes Rotating with Expansion V2. Bidimensional.: 1 batches of 2745 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
82.88 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.34 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
80.11 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
78.94 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
78.65 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
76.94 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.68 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
78.43 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.61 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.34
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
=======================================================================================================
Five Classes Vertical Translation. Bidimensional.: 1 batches of 360 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
82.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.44 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.44 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
85.28 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
85.56 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
86.11 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
85.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.72 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
85.28 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
=======================================================================================================
One Class Surrounding another Class. Bidimensional.: 1 batches of 830 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
92.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.46 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
86.39 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
86.63 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
96.51 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.43 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.95 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.19 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.59 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
=======================================================================================================
Four Classes Expanding and One Class Fixed. Bidimensional.: 1 batches of 2599 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
90.77 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
92.34 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.04 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.42 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.92 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.08 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.69 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.31 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.42 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.42
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
=======================================================================================================
Two Bidimensional Unimodal Gaussian Classes.: 1 batches of 1500 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.93 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.8 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.67 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.67 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
97.87 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
98.07 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
98.07
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
=======================================================================================================
Two Bidimensional Multimodal Gaussian Classes.: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.47 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.5 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Bidimensional Classes as Four Gaussians.: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
80.13 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
79.17 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
86.2 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
86.13 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
84.47 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
90.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
93.33 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.47 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.47
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Artificial Two 3-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.7 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.73 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.43 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.6 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.63 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.93 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.87 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
100.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two 5-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.1 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.07 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.37 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.63 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.57 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.47 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.43 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.1 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
99.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Rotating Gears (Two classes. Bidimensional).: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.07 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.03 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
94.3 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.57 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.4 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
95.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
96.57 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
96.9 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
96.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.9
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Rotated checkerboard dataset. Rotating 2*PI.: 1 batches of 3000 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
50.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
52.2 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
54.7 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
54.87 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
56.3 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
58.87 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
60.6 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
60.73 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
61.53 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
61.53
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Electricity data. 7 features. 2 classes.: 1 batches of 414 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.4 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
75.12 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.4 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.64 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.88 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
75.12 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.88 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.4 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:131: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().
  return RandomForestClassifier(n_estimators=num_trees, max_features=max_features).fit(X, y)
74.64 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
=======================================================================================================
Keyboard patterns database. 10 features. 4 classes.: 1 batches of 24 instances
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
100.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
100.0 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
95.83 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
100.0
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
=======================================================================================================
NOAA dataset. Eight  features. Two classes.: 1 batches of 273 instances
83.52 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.62 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
81.68 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.15 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.62 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.62 {'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.62
{'batches': 1, 'clfName': 'RF', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
=======================================================================================================
******** END of RF results ********
**************** BEGIN of LP results ****************
One Class Diagonal Translation. 2 Dimensional data.: 1 batches of 240 instances
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
97.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0
{'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
One Class Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25
{'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Diagonal Translation. 2 Dimensional data: 1 batches of 240 instances
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83
{'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
87.5
{'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Four Classes Rotating Separated. Bidimensional.: 1 batches of 2166 instances
C:\Users\raul\Anaconda3\lib\site-packages\sklearn\utils\validation.py:526: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
=======================================================================================================
Four Classes Rotating with Expansion V1. Bidimensional.: 1 batches of 1875 instances
86.83 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
81.97 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.61 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
77.23 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
72.32 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
71.73 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
66.35 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
68.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
68.48 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.99 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.24 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.28 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
73.92 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
66.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
62.24 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
57.39 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
60.59 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.25 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.04 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.45 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.29 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
71.52 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
66.29 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.83 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.83 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.19 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.65 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.76 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
81.12 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.24 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
75.36 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
48.75 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.56 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.65 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
81.01 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.91 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.21 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
66.56 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.51 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.29 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.76 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
79.79 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
79.84 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
79.41 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.51 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.72 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.61 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.67 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.03 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
79.84 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.48 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.56 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.72 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.61 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.03 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.24 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.37 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.59 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.24 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.08 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.13 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.97 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.49 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.29 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
77.07 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
75.41 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
76.11 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.51 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.35 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.24 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.24 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.33 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.07 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
77.23 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
75.36 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
76.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.25
{'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
=======================================================================================================
Four Classes Rotating with Expansion V2. Bidimensional.: 1 batches of 2745 instances
81.71 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.11 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.26 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.07 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.93 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.55 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
72.39 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
68.34 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
69.58 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.39 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.88 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.8 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.49 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.3 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.59 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.28 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.46 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.83 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.39 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.09 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.07 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.67 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.31 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.88 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.05 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.12 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.68 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.17 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.81 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.72 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.44 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.23 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.62 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.81 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.41 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.85 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.5 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.37 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.2 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.34 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.85 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.15 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.15 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.24 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.64 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.41 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.19 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.55 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.34 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.3 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
72.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.89 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.97 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.91 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.58 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
72.6 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.12 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
68.63 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.69 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.64 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.29 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.75 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.59 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.25 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.06 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.41 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.16 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.37 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.15 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.27 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
65.9 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.24 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.01 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.37 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
69.58 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.95 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.15 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.56 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.78 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.21 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.91 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.72 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.1 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.35 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.49 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.89 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.11 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
66.19 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
70.82 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.23
{'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
=======================================================================================================
Five Classes Vertical Translation. Bidimensional.: 1 batches of 360 instances
82.78 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.61 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.06 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.78 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.78 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.78 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
82.78 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.28 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.28 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.72 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.61 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.61 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22
{'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
=======================================================================================================
One Class Surrounding another Class. Bidimensional.: 1 batches of 830 instances
96.63 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.54 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.59 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.47 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.18 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.54 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.55 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.3 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.23 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.71 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.54 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.35 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.99 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.35 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.11 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
94.94 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.18 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.71 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.55
{'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
=======================================================================================================
Four Classes Expanding and One Class Fixed. Bidimensional.: 1 batches of 2599 instances
96.34 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.19 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.27 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.27 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
93.96 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.42 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.57 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.61 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.31 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
93.54 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
93.88 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.42 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.04 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.84 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.88 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.23 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.96 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.88 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.11 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.38 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.84 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.88 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.38 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.27 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.04 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.08 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.61 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.73 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.27 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.04 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.46 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.5 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.04 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.04 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.38 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.27 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.61 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.65 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.61 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.58 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.46 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.69 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.42 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
82.11 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.5 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.65 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.42 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.46 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.58 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.15 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.46 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.61 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.15 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.34 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.04 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.04 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.88 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81
{'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
=======================================================================================================
Two Bidimensional Unimodal Gaussian Classes.: 1 batches of 1500 instances
99.4 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.07 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.13 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.53
{'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
=======================================================================================================
Two Bidimensional Multimodal Gaussian Classes.: 1 batches of 3000 instances
99.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.33 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.03 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.03 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.93 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.83 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.77 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.47 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.7 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.93 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6
{'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Bidimensional Classes as Four Gaussians.: 1 batches of 3000 instances
80.47 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.73 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.7 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.9 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.93 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.53 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.7 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.93 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.2 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.67 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.73 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.93 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.7 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.67 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.2 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.5 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
83.1 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
85.2 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.87 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.7 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.63 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.8 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.97 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.1 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.23 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.47 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.2 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.47 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.83 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.3 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.33 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.6 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.67 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.57 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.73 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.87 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.27 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.2 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.27 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.7 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
77.07 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.7 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.37 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.17 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.1 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.17 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.73 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.3 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
70.63 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.8 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.27 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
77.2 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.33 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.9 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.03 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.4 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.33 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
70.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.5 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.23 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.57 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.7 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
70.33 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.73 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.97 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.97 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.1 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.23 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.5 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
71.3 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.27 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.27 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.87 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.83 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.87 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.1 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.77 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.5 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
75.17 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
71.97 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.87 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.7 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.4 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.8 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.8
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Artificial Two 3-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two 5-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
99.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.43 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.43 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.43 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.4 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.7 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Rotating Gears (Two classes. Bidimensional).: 1 batches of 3000 instances
95.6 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.17 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.37 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.43 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.5 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.43 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.27 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.93 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.37 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.97 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.27 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.13 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.6 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.33 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.8 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.17 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.13 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.3 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.3 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.1 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.33 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.23 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.83 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.2 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.83 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.9 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.9 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.27 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.6 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.6 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.37 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.9 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.23 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.03 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.5 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.6 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.87 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.87 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.3 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.03 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.13 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.03 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.57 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.83 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.23 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.97 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.27 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.37 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.67 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.03 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.2 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.03 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.23 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.33 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.23 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.73 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.07 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.47 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.53 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.8 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.73 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.8 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.9 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.53 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.07 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.27 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.7 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.9 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.83 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.9 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.87 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.7 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.03 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.13 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.5 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.7 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.8 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.3
{'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Rotated checkerboard dataset. Rotating 2*PI.: 1 batches of 3000 instances
50.6 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.57 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.6 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
56.1 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
54.03 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.7 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.43 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.23 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.6 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.23 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.47 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.5 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.1 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.47 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
54.57 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.43 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.47 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.5 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.2 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.3 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.63 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.23 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.9 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.93 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.53 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.03 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.5 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.13 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.27 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.93 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.93 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.77 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.3 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.17 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.97 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.53 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.37 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.33 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.63 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.03 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.1 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.97 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.83 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.6 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.87 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.8 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.57 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.17 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.23 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.27 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.87 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.57 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.47 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.17 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.33 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.53 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.2 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.83 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.3 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.73 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.6 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.37 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.7 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.27 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.1 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.1 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.27 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.77 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.5 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.6 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.4 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.1 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.17 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.1 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.2 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.47 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.5 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.83 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.3 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.5 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.7 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.6 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.73 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.3 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.13 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.5 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.97 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.87 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.9 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
56.1
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Electricity data. 7 features. 2 classes.: 1 batches of 414 instances
72.46 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.71 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.46 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
71.98 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
71.98 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
71.98 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.22 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.22 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
72.22 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12
{'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
=======================================================================================================
Keyboard patterns database. 10 features. 4 classes.: 1 batches of 24 instances
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
50.0 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
25.0 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67
{'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
=======================================================================================================
NOAA dataset. Eight  features. Two classes.: 1 batches of 273 instances
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 2, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
75.82 {'K': 3, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92 {'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 5, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 6, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 7, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 8, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 9, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 10, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 11, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
71.43 {'K': 12, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
76.92
{'K': 4, 'batches': 1, 'clfName': 'LP', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
=======================================================================================================
******** END of LP results ********
**************** BEGIN of KNN results ****************
One Class Diagonal Translation. 2 Dimensional data.: 1 batches of 240 instances
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
98.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
99.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
100.0
{'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
One Class Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
93.75 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83
{'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Diagonal Translation. 2 Dimensional data: 1 batches of 240 instances
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
94.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
95.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
96.25
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Two Classes Horizontal Translation. 2 Dimensional data.: 1 batches of 240 instances
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
84.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
83.75 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
85.83
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 560, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 240}
=======================================================================================================
Four Classes Rotating Separated. Bidimensional.: 1 batches of 2166 instances
C:\Users\raul\Desktop\GITHUB\Systems-Engineering\Dissertation\source\classifiers.py:135: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  return KNeighborsClassifier(n_neighbors=K, algorithm = 'brute').fit(X, y)
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
99.95 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
100.0
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 5054, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2166}
=======================================================================================================
Four Classes Rotating with Expansion V1. Bidimensional.: 1 batches of 1875 instances
94.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
75.79 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
71.68 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
74.88 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
73.39 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
73.44 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
67.47 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
71.52 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
71.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
79.09 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
70.13 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
57.65 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
45.81 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
50.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
52.21 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
52.37 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
53.33 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
52.85 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
89.65 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
77.55 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
67.73 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.16 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
63.41 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
62.29 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
65.28 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.91 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.69 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
87.04 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
67.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
48.69 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
46.08 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
52.96 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
43.04 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
41.76 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
42.03 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
44.43 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.04 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
83.63 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
63.73 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
60.27 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
59.25 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
54.72 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
48.05 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
49.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
50.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.83 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
88.05 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
58.45 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
50.77 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
49.71 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
47.79 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
46.45 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
42.93 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
47.25 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.25 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
93.92 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
72.91 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.69 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
61.23 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
57.76 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
55.41 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
54.77 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
53.76 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.51 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
85.33 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
56.11 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
47.04 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
45.23 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
39.63 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
40.59 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
40.96 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
39.89 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.99 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
90.56 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
72.69 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
63.47 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
53.6 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
51.68 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
46.29 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
42.88 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
42.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.83 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
87.95 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
78.56 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
55.04 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
53.6 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
46.72 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
44.27 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
44.8 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
43.09 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.15 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
94.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
80.27 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
68.43 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
65.01 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
64.43 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
54.13 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
50.72 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
45.44 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
95.25
{'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 4375, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1875}
=======================================================================================================
Four Classes Rotating with Expansion V2. Bidimensional.: 1 batches of 2745 instances
84.55 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.58 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.5 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
71.69 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.22 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.03 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.88 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.86 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.81 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.13 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.7 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.88 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.79 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.38 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.62 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.14 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.25 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.14 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.47 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.41 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.29 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.43 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.34 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.23 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.17 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.75 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.47 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.16 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.58 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
76.79 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.87 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.94 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.78 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.98 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.64 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.84 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.19 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.98 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.08 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
77.38 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
75.66 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.92 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
73.11 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
74.54 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.83 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.59 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.92 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.35 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.51 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.51 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.17 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.95 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.19 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.34 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.68 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.94 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.66 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.42 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
78.58 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.29 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.52 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.54 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.95 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.83 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.3 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.64 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.93 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.17 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.28 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.5 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.68 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.01 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.86 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.45 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
79.6 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.02 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
80.18 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
87.1 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.48 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
86.3 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.94 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
85.14 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
84.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
83.64 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
82.84 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
81.89 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
87.1
{'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6405, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2745}
=======================================================================================================
Five Classes Vertical Translation. Bidimensional.: 1 batches of 360 instances
84.44 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.44 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.89 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.33 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
83.89 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
84.17 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.28 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.94 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.83 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
85.56 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.39 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
86.11 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
87.22
{'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 840, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 360}
=======================================================================================================
One Class Surrounding another Class. Bidimensional.: 1 batches of 830 instances
96.63 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.71 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
94.34 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.42 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.35 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.11 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.99 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.83 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.39 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.31 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.51 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.54 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.59 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.27 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.95 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.66 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.47 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.95 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.14 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
97.59 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.43 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.06 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.02 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.9 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
95.78 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
96.63 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.19 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.07 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
98.67
{'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 1934, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 830}
=======================================================================================================
Four Classes Expanding and One Class Fixed. Bidimensional.: 1 batches of 2599 instances
96.42 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.58 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.88 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.92 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.34 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.58 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.34 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.69 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.84 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.15 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.23 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.19 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.11 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.54 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.81 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.31 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.69 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.77 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.46 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.31 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.54 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.65 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.19 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.31 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.5 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.58 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.42 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.38 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.19 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.58 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.42 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.88 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.42 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.54 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.58 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.04 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
94.88 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.58 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.96 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.58 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.19 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.42 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.81 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.65 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.69 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
97.19 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.19 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.96 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.73 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.81 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.88 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.15 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.88 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.77 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.5 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.54 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.84 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.61 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.11 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.58 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.84 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.69 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.08 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.54 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.84 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
96.04 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.92 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
95.81 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
97.19
{'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 6063, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 2599}
=======================================================================================================
Two Bidimensional Unimodal Gaussian Classes.: 1 batches of 1500 instances
99.4 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
98.93 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
98.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.07 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
98.87 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.07 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.07 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.2 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.33 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.27 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
99.47
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 3500, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 1500}
=======================================================================================================
Two Bidimensional Multimodal Gaussian Classes.: 1 batches of 3000 instances
99.07 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.03 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.03 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.03 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.87 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.9 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.5 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.8 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.97 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.13 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.23 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63
{'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Bidimensional Classes as Four Gaussians.: 1 batches of 3000 instances
80.53 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.7 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.2 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.03 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.93 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.87 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.97 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.2 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
90.7 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.07 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.37 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
83.23 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.7 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.4 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.13 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.2 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.3 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.3 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.9 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.3 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.93 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.5 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.93 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.03 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.47 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.37 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.93 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.37 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.13 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.53 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.23 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.93 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.03 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
77.93 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.33 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.13 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.17 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.33 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.97 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.33 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.8 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.77 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.87 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.83 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.5 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.27 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.3 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.07 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.13 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
76.97 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
82.07 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
87.1 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
85.93 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.67 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.33 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.57 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.23 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.9 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.17 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
86.27 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
88.53 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.47 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.47 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.8 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.63 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.13 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.43 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.27 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.93 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
85.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.8 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.87 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.47 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
81.1 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
79.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
78.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
80.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
89.27 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
91.6 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
93.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.2 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.13
{'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Artificial Two 3-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
100.0
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two 5-dimensional Unimodal Gaussian Classes.: 1 batches of 3000 instances
99.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.53 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.7 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.8 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.77 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.73 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.83
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Two Rotating Gears (Two classes. Bidimensional).: 1 batches of 3000 instances
95.53 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.27 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.23 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
92.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.1 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.27 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.3 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.3 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
94.3 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.23 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.9 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.43 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.93 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.17 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.13 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.5 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.0 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.87 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.03 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.1 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.2 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.2 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.2 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.2 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.0 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.07 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.6 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.47 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.1 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.77 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.43 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.53 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.4 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.3 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.83 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.47 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.27 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.53 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.63 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.37 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.9 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.67 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.2 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.33 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.43 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.6 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.07 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.6 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.33 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.3 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.2 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.37 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.47 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.3 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.93 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.7 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.5 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.4 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.17 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.37 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.37 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.37 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.23 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.7 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.4 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.0 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.5 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.13 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.23 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.57 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
95.73 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
96.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.07 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
97.7 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.4 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.53 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
98.5 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.1 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
99.67
{'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Rotated checkerboard dataset. Rotating 2*PI.: 1 batches of 3000 instances
50.2 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.83 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.3 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.57 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.0 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.8 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.97 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.73 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.87 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.5 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.6 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.43 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.2 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.83 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
54.63 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
57.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.23 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.7 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.27 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.7 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.93 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.97 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.3 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.53 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.2 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.53 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.97 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.8 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.8 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.67 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.7 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
55.43 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
57.1 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.93 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.5 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.83 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.43 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.5 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
54.1 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.23 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.8 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.1 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.47 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.17 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.67 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.17 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
56.47 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
59.57 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.93 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.07 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.7 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.17 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.37 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.27 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.13 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.7 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.07 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.87 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.2 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.77 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.33 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.3 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
54.53 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.63 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
56.3 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.7 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.53 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.3 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.0 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.83 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.37 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.87 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.2 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.73 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.47 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.53 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.43 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.13 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.77 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
56.3 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
58.17 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
59.57 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
51.63 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.07 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
52.87 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
49.47 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
50.37 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
48.6 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
53.1 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
59.57
{'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 7000, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 3000}
=======================================================================================================
Electricity data. 7 features. 2 classes.: 1 batches of 414 instances
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.4 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.19 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.43 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.67 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.15 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
73.91 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.64 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
74.88 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.12 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
75.36
{'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 963, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 414}
=======================================================================================================
Keyboard patterns database. 10 features. 4 classes.: 1 batches of 24 instances
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
83.33 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
87.5 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
75.0 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
79.17 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
66.67 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
91.67
{'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 56, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 24}
=======================================================================================================
NOAA dataset. Eight  features. Two classes.: 1 batches of 273 instances
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
78.75 {'K': 2, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
80.95 {'K': 3, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 4, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
84.25 {'K': 5, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 6, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.52 {'K': 8, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 9, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
82.78 {'K': 10, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
83.88 {'K': 11, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.85, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.8, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.75, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.7, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.65, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.6, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.55, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35 {'K': 12, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.5, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
85.35
{'K': 7, 'batches': 1, 'clfName': 'KNN', 'excludingPercentage': 0.9, 'initialLabeledData': 634, 'isBatchMode': False, 'poolSize': 300, 'sizeOfBatch': 273}
=======================================================================================================
******** END of KNN results ********